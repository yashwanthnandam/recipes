version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-recipes_db}
      POSTGRES_USER: ${POSTGRES_USER:-recipes_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-recipes_password}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-recipes_user} -d ${POSTGRES_DB:-recipes_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Django Web Application
  web:
    build: .
    restart: unless-stopped
    volumes:
      # Persistent media files
      - media_files:/app/media
      # Static files
      - static_files:/app/staticfiles
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-recipes_user}:${POSTGRES_PASSWORD:-recipes_password}@db:5432/${POSTGRES_DB:-recipes_db}
      - DB_NAME=${POSTGRES_DB:-recipes_db}
      - DB_USER=${POSTGRES_USER:-recipes_user}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-recipes_password}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  media_files:
  static_files:

networks:
  default:
    name: recipes_network